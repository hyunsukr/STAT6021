response[i]
response[,i]
response[i,]
exam = response[i,]$exam_id
uid = response[i,]$user_id
class = response[i,]$class_id
sql <- paste0("UPDATE usersExams SET response = '", final, "' WHERE exam_id=", exam, " AND user_id='", uid, "' AND class_id='", class,"';")
sql
knitr::opts_chunk$set(echo = TRUE)
latest = latest[latest$county != "Unknow",]
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw1")
Covid = read.csv("UScovid.csv", header = TRUE)
Covid = read.csv("UScovid.csv", header = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw1")
Covid = read.csv("UScovid.csv", header = TRUE)
head(Covid)
latest = Covid
latest$date = as.Date(latest$date)
head(latest)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw1")
Covid = read.csv("UScovid.csv", header = TRUE)
Covid = read.csv("UScovid.csv", header = TRUE)
Covid = read.csv("UScovid.csv", header = TRUE)
head(Covid)
latest = Covid
latest$date = as.Date(latest$date)
latest = latest[latest$date >= as.Date('2021-06-03'),]
latest = latest[latest$county != "Unknow",]
latest$date = NULL
latest$fips = NULL
latest = latest[order(country, state)]
latest = latest[order(country, state),]
head(latest)
latest = latest[order(county, state),]
head(latest)
latest = latest[order(county),]
latest$county
latest = latest[order(county),]
latest = latest[order(latest$county, latest$state),]
latest$county
head(latest)
head(latest)
colnames(latest)
library(dplyr)
head(latest,10)
head(latest,20)
latest$death.rate = (latest$deaths / latest$cases)
head(latest)
latest[order(latest$death.rate) , c("death.rate", "death", "county", "state")]
latest[order(latest$death.rate),]
latest[order(-latest$death.rate),]
latest[order(-latest$cases.),]
latest[order(-latest$cases),]
latest[order(-latest$cases), c("county", "state")]
latest[order(-latest$cases), c("county", "state", "deaths", "death.rate")]
latest[order(-latest$cases), c("county", "state", "deaths", "death.rate", "cases")]
latest[order(-latest$deaths), c("county", "state", "deaths", "death.rate", "cases")]
latest[order(-latest$death.rate), c("county", "state", "deaths", "death.rate", "cases")]
latest = latest[latest$county != "Unknown",]
latest$date = NULL
latest$fips = NULL
latest = latest[order(latest$county, latest$state),]
head(latest)
latest$death.rate = (latest$deaths / latest$cases)
head(latest)
latest[order(-latest$cases), c("county", "state", "deaths", "death.rate", "cases")]
latest[order(-latest$deaths), c("county", "state", "deaths", "death.rate", "cases")]
latest[order(-latest$death.rate), c("county", "state", "deaths", "death.rate", "cases")]
atleast = latest[latest$cases >= 100000, ]
atleast[order(-atleast$death.rate),  c("county", "state", "deaths", "death.rate", "cases")]
atleast[order(-atleast$death.rate),  c("county", "state", "deaths", "death.rate", "cases")]
latest[(latest$county == "Albemarle" && latest$state == "Virginia"),]
latest[(latest$county == "Albemarle",]
latest[(latest$county == "Albemarle"),]
latest[(latest$county == "Albemarle" && latest$state == "Virginia"),]
latest[((latest$county == "Albemarle") && (latest$state == "Virginia")),]
(latest$county == "Albemarle") && (latest$state == "Virginia")
latest[(latest$state == "Virginia"),]
latest[(latest$state == "Virginia") & (latest$county == "Albemarle"),]
latest[(latest$state == "Virginia") & (latest$county == "Charlottesville City"),]
latest[(latest$state == "Virginia") & (latest$county == "Charlottesville city"),]
# Step 1
state.level = Covid
state.level$date = as.Date(state.level$date)
state.level = state.level[state.level$date >= as.Date('2021-06-03'),]
# Step 2
state.level$county = NULL
# Step 3
state.level = group_by(state.level, "state")
state
state.level
state.level$figs = NULL
# Step 3
state.level = group_by(state.level, "state")
state.level
# Step 1
state.level = Covid
state.level$date = as.Date(state.level$date)
state.level = state.level[state.level$date >= as.Date('2021-06-03'),]
# Step 2
state.level$county = NULL
state.level$figs = NULL
state.level$date = NULL
# Step 3
state.level = group_by(state.level, state)
state.level
state.level$fips = NULL
state.level$date = NULL
# Step 3
state.level = group_by(state.level, state)
state.level
# Step 3
state.level = state.level %>% group_by(state)
state.level
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(cases = sum(cases), deaths = sum(deaths))
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(cases = sum(cases), deaths = sum(deaths))
state.level
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(cases = sum(cases), deaths = sum(deaths))
state.level
# Step 1
state.level = Covid
state.level$date = as.Date(state.level$date)
state.level = state.level[state.level$date >= as.Date('2021-06-03'),]
# Step 2
state.level$county = NULL
state.level$fips = NULL
state.level$date = NULL
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(cases = sum(cases), deaths = sum(deaths))
state.level
# Step 3
state.level = state.level %>% group_by(state)
state.level
# Step 1
state.level = Covid
state.level$date = as.Date(state.level$date)
state.level = state.level[state.level$date >= as.Date('2021-06-03'),]
# Step 2
state.level$county = NULL
state.level$fips = NULL
state.level$date = NULL
# Step 3
state.level = state.level %>% group_by(state)
state.level
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(across(everything(), sum))
state.level
latest = Covid
latest = latest[latest$date == '2021-06-03',]
state.level = state.level[state.level$date == '2021-06-03',]
# Step 1
state.level = Covid
state.level = state.level[state.level$date == '2021-06-03',]
# Step 2
state.level$county = NULL
state.level$fips = NULL
state.level$date = NULL
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(across(everything(), sum))
state.level
# Step 4
state.level = state.level[order(state.level$state),]
# Show top 6
head(state)
# Show top 6
head(state.level)
```{r}
state.level$state.rate = round((state.level$deaths / state.level$cases),2)
head(state.level)
state.level[state.level$state == "Virginia", c("state.rate")]
state.level[state.level$state == "Virginia", c("state","state.rate")]
state.level[state.level$state == "Puerto Rico", c("state","state.rate")]
covid[covid$state == "Puerto Rico", ]
Covid[Covid$state == "Puerto Rico",]
head(state.level[order(-state.level$state.rate),],10)
head(state.level[order(state.level$state.rate),],10)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw1")
Covid = read.csv("UScovid.csv", header = TRUE)
Covid = read.csv("UScovid.csv", header = TRUE)
head(Covid)
latest = Covid
latest = latest[latest$date == '2021-06-03',]
latest = latest[latest$county != "Unknown",]
latest$date = NULL
latest = latest[order(latest$county, latest$state),]
head(latest)
latest$death.rate = (latest$deaths / latest$cases)
head(latest)
head(latest[order(-latest$cases), c("county", "state", "deaths", "death.rate", "cases")],10)
head(latest[order(-latest$deaths), c("county", "state", "deaths", "death.rate", "cases")],10)
head(latest[order(-latest$death.rate), c("county", "state", "deaths", "death.rate", "cases")],10)
atleast = latest[latest$cases >= 100000, ]
latest[(latest$state == "Virginia") & (latest$county == "Albemarle"),]
latest[(latest$state == "Virginia") & (latest$county == "Charlottesville city"),]
# Step 1
state.level = Covid
# Step 2
state.level$county = NULL
state.level$date = NULL
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(across(everything(), sum), na.rm=TRUE)
# Step 4
state.level = state.level[order(state.level$state),]
# Show top 6
head(state.level)
state.level$state.rate = round((state.level$deaths / state.level$cases),2)
head(state.level)
state.level[state.level$state == "Puerto Rico", c("state","state.rate")]
state.level[state.level$state == "Virginia", c("state","state.rate")]
# Step 1
state.level = Covid
# Step 2
state.level$county = NULL
state.level$date = NULL
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(across(everything(), sum,  na.rm=TRUE))
# Step 4
state.level = state.level[order(state.level$state),]
# Show top 6
head(state.level)
state.level$state.rate = round((state.level$deaths / state.level$cases),2)
head(state.level)
state.level[state.level$state == "Virginia", c("state","state.rate")]
state.level[state.level$state == "Puerto Rico", c("state","state.rate")]
head(state.level[order(-state.level$state.rate),],10)
head(state.level[order(state.level$state.rate),],10)
latest$death.rate = round((latest$deaths / latest$cases),2)
head(latest)
head(latest[order(-latest$cases), c("county", "state", "deaths", "death.rate", "cases")],10)
head(latest[order(-latest$deaths), c("county", "state", "deaths", "death.rate", "cases")],10)
head(latest[order(-latest$death.rate), c("county", "state", "deaths", "death.rate", "cases")],10)
atleast = latest[latest$cases >= 100000, ]
head(atleast[order(-atleast$death.rate),  c("county", "state", "deaths", "death.rate", "cases")],10)
# Step 1
state.level = Covid
state.level = state.level[state.level$date == '2021-06-03',]
# Step 2
state.level$county = NULL
state.level$fips = NULL
state.level$date = NULL
# Step 3
state.level = state.level %>% group_by(state) %>% summarise(across(everything(), sum,  na.rm=TRUE))
state.level
# Step 4
state.level = state.level[order(state.level$state),]
# Show top 6
head(state.level)
state.level$state.rate = round((state.level$deaths / state.level$cases),2)
head(state.level)
state.level[state.level$state == "Virginia", c("state","state.rate")]
state.level[state.level$state == "Puerto Rico", c("state","state.rate")]
head(state.level[order(-state.level$state.rate),],10)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module2")
library(tidyverse)
data = read.csv("new_students.csv")
head(data)
table(data$GPA.cat)
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange")
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange") + theme_bw()
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Number of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
newData = Data %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(Data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
newData = Data %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(Data))
newData = data %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(Data))
newData = data %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity") +
geom_bar(fill="blue", color="orange")
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity") +
geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity") +
geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
newData = data %>%
group_by(GPA.cat) %>%
summarize(Counts=n(), na.rm=TRUE) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Number of Students", title="Dist of GPA Category") +
theme_bw()
unique(data$GPA.cat)
newData = data %>%
group_by(GPA.cat) %>%
summarize(Counts=n( na.rm=TRUE)) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
newData = data %>%
filter(!is.na(GPA.cat))
newData = data %>%
filter(!is.na(GPA.cat)) %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
table(data$Gender)
table(data$Gender, data$GPA.cat)
prop.table(data$Gender, data$GPA.cat)
prop.table(data$Gender, data$GPA.cat,1)
prop.table(table(data$Gender, data$GPA.cat))
prop.table(table(data$Gender, data$GPA.cat),1)
round(prop.table(table(data$Gender, data$GPA.cat),1),2)
newData = data %>%
filter(!is.na(GPA.cat)) %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill=Gener) +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill=Gender) +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
newData
ggplot(data, aes(x=GPA.cat, y=gender)) +
geom_bar(position= "fill") +
theme_bw()
ggplot(data, aes(x=GPA.cat, y=Gender)) +
geom_bar(position= "fill") +
theme_bw()
ggplot(data, aes(x=GPA.cat, fill=Gender)) +
geom_bar(position= "fill") +
theme_bw()
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Gender)) +
geom_bar(position= "fill") +
theme_bw()
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Gender)) +
geom_bar(position= "fill") +
labs(x="GPA Category", y="Proportion", title="Proportion of Gender by GPA Category")
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Gender)) +
geom_bar(position= "fill") +
labs(x="GPA Category", y="Proportion", title="Proportion of Gender by GPA Category") +
theme_bw()
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Gender)) +
geom_bar(position= "fill") +
labs(x="GPA Category", y="Proportion", title="Proportion of Gender by GPA Category") +
theme_bw()
data$Smoke
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Smoke)) +
geom_bar(position= "fill") +
labs(x="GPA Category", y="Proportion", title="Proportion of Smoking Status by GPA Category") +
theme_bw()
data %>% ggplot(aes=(x=GPA, y=StudyHrs)) + geom_point()
data %>% ggplot(aes=(x=GPA , y=StudyHrs)) + geom_point()
data$GPA
data %>% ggplot(aes=(x=GPA, y=StudyHrs)) + geom_point()
ggplot(data, aes=(x=GPA,y=StudyHrs)) + geom_point()
ggplot(data, aes=(x=GPA,y=StudyHrs))
ggplot(data, aes=(x=data$GPA,y=StudyHrs))
ggplot(data, aes(x=GPA, y=StudyHrs))
ggplot(data, aes(x=GPA, y=StudyHrs)) + geom_point()
ggplot(data, aes(x=GPA, y=StudyHrs)) + geom_point() + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs)) + geom_point() + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, fill=PartyNum)) + geom_point(alpha=0.2) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, fill=PartyNum)) + geom_point() + theme_bw()
data$PartyNum
ggplot(data, aes(x=GPA, y=StudyHrs, color=PartyNum)) + geom_point() + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(0.1,12) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(0.1,12) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(0.1,12) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(0.1,12) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(0.1,12)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(0.1,5)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(1,5)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(1,2)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(1,5)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum, color=Smoke)) + geom_point() + scale_size(range=c(1,5)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum, color=Smoke)) + geom_point(alpha=0.2) + scale_size(range=c(1,5)) + theme_bw()
ggplot(data, aes(x=GPA, y=StudyHrs, size=PartyNum, color=Smoke)) + geom_point(alpha=0.5) + scale_size(range=c(1,5)) + theme_bw()
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module2")
data = read.csv("new_students.csv")
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Number of Students", title="Dist of GPA Category") +
theme_bw()
table(data$Gender, data$GPA.cat)
ggplot(data, aes(y=GPA, x=StudyHrs)) + geom_point() + theme_bw()
ggplot(data, aes(y=GPA, x=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(1,5)) + theme_bw()
ggplot(data, aes(x=StudyHrs, y=GPA, size=PartyNum, color=Smoke)) + geom_point(alpha=0.5) + scale_size(range=c(1,5)) + theme_bw()
data$GPA.cat <- factor(data$GPA.cat, levels=c("low", "moderate", "high"))
table(data$GPA.cat)
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module2")
data = read.csv("new_students.csv")
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
data$GPA.cat <- factor(data$GPA.cat, levels=c("low", "moderate", "high"))
table(data$GPA.cat)
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
data = read.csv("new_students.csv")
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module1")
data = read.table("students.txt", header = TRUE)
data$Student <- NULL
head(data)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module2")
data = read.csv("new_students.csv")
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Number of Students", title="Dist of GPA Category") +
theme_bw()
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module1")
data = read.table("students.txt", header = TRUE)
data$Student <- NULL
head(data)
result = read.table("students.txt", header = TRUE)
result$Student <- NULL
result$GPA.cat <- cut(data$GPA, breaks = c(0, 2.99, 3.499, 5),
labels = c("Low", "moderate", "high"))
write.csv(result, file="new_students.csv", row.names = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module2")
data = read.csv("new_students.csv")
data$GPA.cat <- factor(data$GPA.cat, levels=c("Low", "moderate", "high"))
table(data$GPA.cat)
ggplot(data, aes(x=GPA.cat)) + geom_bar(fill="blue", color="orange") +
labs(x="GPA Category", y="Number of Students", title="Dist of GPA Category") +
theme_bw()
newData = data %>%
filter(!is.na(GPA.cat)) %>%
group_by(GPA.cat) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=GPA.cat, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Gender)) +
geom_bar(position= "fill") +
labs(x="GPA Category", y="Proportion", title="Proportion of Gender by GPA Category") +
theme_bw()
data %>%
filter(!is.na(GPA.cat)) %>%
ggplot(aes(x=GPA.cat, fill=Smoke)) +
geom_bar(position= "fill") +
labs(x="GPA Category", y="Proportion", title="Proportion of Smoking Status by GPA Category") +
theme_bw()
ggplot(data, aes(y=GPA, x=StudyHrs)) + geom_point() + theme_bw()
ggplot(data, aes(y=GPA, x=StudyHrs, size=PartyNum)) + geom_point() + scale_size(range=c(1,5)) + theme_bw()
ggplot(data, aes(x=StudyHrs, y=GPA, size=PartyNum, color=Smoke)) + geom_point(alpha=0.5) + scale_size(range=c(1,5)) + theme_bw()
