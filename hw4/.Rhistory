labs(title="Cause of Death for each month", y="Proportion") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), plot.title = element_text(hjust = 0.5))
data %>%
filter(!is.na(month)) %>%
filter(raceethnicity != "Unknown") %>%
ggplot(aes(x=month, fill=cause)) +
geom_bar(position = "fill") +
facet_wrap(~raceethnicity) +
labs(title="Cause of Death for each month", y="Proportion") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw1")
Covid = read.csv("UScovid.csv", header = TRUE)
Covid = read.csv("UScovid.csv", header = TRUE)
head(Covid)
latest = Covid
latest = latest[latest$date == '2021-06-03',]
latest = latest[latest$county != "Unknown",]
latest$date = NULL
latest$fips = NULL
latest = latest[order(latest$county, latest$state),]
head(latest)
latest$death.rate = round((latest$deaths / latest$cases) * 100,2)
head(latest)
head(latest[order(-latest$cases), c("county", "state", "deaths", "death.rate", "cases")],10)
head(latest[order(-latest$death.rate), c("county", "state", "deaths", "death.rate", "cases")],10)
# Step 1
state.level = Covid
state.level = state.level[state.level$date == '2021-06-03',]
# Step 2
state.level$county = NULL
state.level$fips = NULL
state.level$date = NULL
# Step 3
## Removed NA due to quality issues.
state.level = state.level %>% group_by(state) %>% summarise(across(everything(), sum,  na.rm=TRUE))
state.level
# Step 4
state.level = state.level[order(state.level$state),]
# Show top 6
head(state.level)
state.level$state.rate = round((state.level$deaths / state.level$cases) * 100,2)
head(state.level)
state.level[state.level$state == "Virginia", c("state","state.rate")]
state.level[state.level$state == "Puerto Rico", c("state","state.rate")]
head(state.level[order(-state.level$state.rate),],10)
head(state.level[order(state.level$state.rate),],10)
write.csv(state.level, file="stateCovid.csv", row.names = FALSE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw2")
stateCovid = read.csv("stateCovid.csv", header = TRUE)
head(stateCovid)
dim(stateCovid)
head(stateCovid)
stateElection = read.csv("State_pop_election.csv", header=TRUE)
head(stateElection)
stateMerged = merge(stateCovid, stateElection, by.x="state", by.y="State")
head(stateMerged)
ggplot(stateMerged, aes(x=cases, y=deaths, fill=Election)) +
geom_point()
data %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, fill=Election)) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, fill=Election)) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_fill_manual(c("Blue", "Red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(c("Blue", "Red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(c("Blue", "Red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(c("blue", "red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=-c("blue", "red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point() +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.2) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=Population, y=state.rate, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(0.1,12)) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
labs(title="Scatter Plot of State Death Rate against Number of Cases", y="State Death Rate", x="Number of Covid Cases") +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
#scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
labs(title="Scatter Plot of State Death Rate against Number of Cases", y="State Death Rate", x="Number of Covid Cases") +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
labs(title="Scatter Plot of State Death Rate against Number of Cases", y="State Death Rate", x="Number of Covid Cases") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
install.packages("palmerpenguins")
library(palmerpenguins)
?penguins
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)")
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
cor(body_mass_g, flipper_length_mm)
cor(penguins$body_mass_g, penguins$flipper_length_mm)
cor(penguins$body_mass_g, penguins$flipper_length_mm)
penguins$body_mass_g
penguins$flipper_length_mm
cor(penguins$body_mass_g, penguins$flipper_length_mm)
library(tidyverse)
cor(penguins$body_mass_g, penguins$flipper_length_mm)
penguins$body_mass_g
penguins$flipper_length_mm
penguins
penguins[flipper_length_mm,]
penguins["flipper_length_mm"",]
penguins["flipper_length_mm",]
penguins[,"flipper_length_mm"]
penguins[,c("flipper_length_mm", "body_mass_g")]
cor(penguins[,c("flipper_length_mm", "body_mass_g")])
cor(penguins[,c("flipper_length_mm", "body_mass_g")], use = "complete.obs")
result<-lm(flipper_length_mm~body_mass_g, data=penguins)
summary(result)
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
cor(penguins[,c("flipper_length_mm", "body_mass_g")], use = "complete.obs")
library(palmerpenguins)
library(palmerpenguins)
library(palmerpenguins)
library(palmerpenguins)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(tidyverse)
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
cor(penguins[,c("flipper_length_mm", "body_mass_g")], use = "complete.obs")
summary(result)
result<-lm(flipper_length_mm~body_mass_g, data=penguins)
summary(result)
result<-lm(body_mass_g~flipper_length_mm, data=penguins)
summary(result)
predict(result, 220)
newData = data.frame(c(220))
predict(result, newData)
colnames(newData) = "flipper_length_mm"
predict(result, newData)
anova(result)
anova.tab = anova(result)
SST<-sum(anova.tab$"Sum Sq")
anova.tab$"Sum Sq"[1]/SST
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(palmerpenguins)
library(tidyverse)
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(flipper_length_mm,body_mass_g, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
result = penguins %>%
filter(species == "Gentoo") %>%
lm(body_mass_g~flipper_length_mm)
data = penguins %>%
filter(species == "Gentoo")
result<-lm(body_mass_g~flipper_length_mm, data=data)
summary(result)
newData = data.frame(c(220))
colnames(newData) = "flipper_length_mm"
predict(result, newData)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw\4")
data <- read.csv("copier.txt", sep="\t")
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw/4")
data <- read.csv("copier.txt", sep="\t")
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Hw4")
data <- read.csv("copier.txt", sep="\t")
head(data)
data %>%
ggplot(aes(Serviced,Minutes)) +
geom_point() +
labs(
title="Minutes vs Serviced",
y="Minutes",
x="Number of Serviced"
) +
theme_bw()
data %>%
ggplot(aes(Serviced,Minutes)) +
geom_point() +
labs(
title="Minutes vs Serviced",
y="Minutes",
x="Number of Serviced"
) +
theme_bw()
cor(data)
cor(data)
result<-lm(Minutes~Serviced, data=data)
confint(result,level = 0.95)
newdata <- data.frame(Serviced=5)
predict(result, newdata, level=0.95, interval="confidence")
data[1,]
data[1,]$Serviced
newdata <- data.frame(Serviced=data[1,]$Serviced)
predict(result, newdata)
residual = pred - data[1,]$Minutes
pred = predict(result, newdata)
residual = pred - data[1,]$Minutes
residual
all_pred = predict(result, newdata$Serviced)
data$Serviced
data[,1]
all_pred = predict(result, data$Serviced)
newdata <- data.frame(Serviced= data[,2])
all_pred = predict(result, newdata)
all_pred
data[,2] - all_pred
data[,2] - all_pred
sum(data[,2] - all_pred)
all_data_serviced <- data.frame(Serviced= data$Serviced)
all_pred = predict(result, all_data_serviced)
all_pred
data$Serviced
data$Minutes
data$Minutes - all_pred
sum(data$Minutes - all_pred))
sum(data$Minutes - all_pred)
result
result
result
result<-lm(Minutes~Serviced, data=data)
result
76960 / 79
14.540 / 4.402
76960 / (79/43)
76960 / (79/2)
pt(1.809,8)
1 - pt(1.809,8)
0.05402789 * 2
(0.2)^0.5
18.2 + 2.306 * 1.483 * 0.4472136
18.2 - 2.306* 1.483* 0.4472136
(1 + 0.1 + 0.1)^0.5
18.2 - 2.306*  1.483 * 1.095445
18.2 - 2.306*  1.483 *1.095445
18.2 + 2.306*  1.483 *1.095445
0.9^0.5
0.1^0.5
160/2.2
76960/3416
76960+79
77039/79
13.949/1.454
160/(160+17.6)
print(10, 10)
pnorm((9.25840682465222-10.8)/(2.5/sqrt(77))
)
(9.25840682465222-10.8)/(2.5/sqrt(77)
)
data %>%
ggplot(aes(Serviced,Minutes)) +
geom_point() +
labs(
title="Minutes vs Serviced",
y="Minutes",
x="Number of Serviced"
) +
theme_bw()
predict(result, newdata, level=0.95, interval="prediction")
predict(result, newdata, interval="prediction")
newdata <- data.frame(Serviced=5)
predict(result, newdata, interval="prediction")
newdata <- data.frame(Serviced=5)
predict(result, newdata, interval="prediction")
newdata <- data.frame(Serviced=data[1,]$Serviced)
pred = predict(result, newdata)
residual = data[1,]$Minutes - pred
residual
all_data_serviced <- data.frame(Serviced= data$Serviced)
all_data_serviced <- data.frame(Serviced= data$Serviced)
all_data_serviced <- data.frame(Serviced= data$Serviced)
all_pred = predict(result, all_data_serviced)
sum(data$Minutes - all_pred)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(MASS)
mamals
mammals
mammals %>%
ggplot(aes(body, brain)) + geom_point()
mammals %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
mammals %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw() + geom_smooth(method = "lm", se=FALSE)
result <- lm(brain~boday, data=mammals)
boxcox(result)
result <- lm(brain~boday, data=mammals)
result <- lm(brain~body, data=mammals)
boxcox(result)
boxcox(result, lambda = seq(0, 1, 1/10))
temp <- mamals
temp <- mammals
temp$brain = temp$brain^0.1
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
boxcox(result)
boxcox(result, lambda = seq(-1, 1, 1/10))
boxcox(result, lambda = seq(-0.5, 0.5, 1/10))
boxcox(result, lambda = seq(-0.5, 0.5, 1/100))
boxcox(result, lambda = seq(-0.1, 0.3, 1/100))
temp$brain = temp$brain^0.05
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
boxcox(result, lambda = seq(-0.05, 0.2, 1/100))
temp$brain = temp$brain^0.075
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
temp$brain
mammals$brain
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw() + geom_smooth(method = "lm", se=FALSE)
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw() + + geom_smooth(method = "lm", se=FALSE)
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
result <- lm(brain~body, data=mammals)
yhat = result$fitted.values
res = result$residuals
data = data.frame(mammals, yhat, res)
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
mammals %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
result <- lm(brain~body, data=temp)
yhat = result$fitted.values
res = result$residuals
data = data.frame(mammals, yhat, res)
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
temp %>%
ggplot(aes(log(body), brain)) + geom_point() + theme_bw()
result <- lm(brain~log(body), data=temp)
yhat = result$fitted.values
res = result$residuals
data = data.frame(mammals, yhat, res)
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
acf(result, main="ACF Plot of Residuals with ystar")
acf(result$residuals, main="ACF Plot of Residuals with ystar")
qqline(result$residuals, col="red")
)
qqnorm(result$residuals)
qqline(result$residuals, col="red")
qqnorm(result$residuals)
qqline(result$residuals, col="red")
qqnorm(result$residuals) + qqline(result$residuals, col="red")
qqnorm(result$residuals)
result
result
