state.level[state.level$state == "Virginia", c("state","state.rate")]
state.level[state.level$state == "Puerto Rico", c("state","state.rate")]
head(state.level[order(-state.level$state.rate),],10)
head(state.level[order(state.level$state.rate),],10)
write.csv(state.level, file="stateCovid.csv", row.names = FALSE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/hw2")
stateCovid = read.csv("stateCovid.csv", header = TRUE)
head(stateCovid)
dim(stateCovid)
head(stateCovid)
stateElection = read.csv("State_pop_election.csv", header=TRUE)
head(stateElection)
stateMerged = merge(stateCovid, stateElection, by.x="state", by.y="State")
head(stateMerged)
ggplot(stateMerged, aes(x=cases, y=deaths, fill=Election)) +
geom_point()
data %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, fill=Election)) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, fill=Election)) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_fill_manual(c("Blue", "Red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(c("Blue", "Red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(c("Blue", "Red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(c("blue", "red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=-c("blue", "red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point() +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.2) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=deaths, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=Population, y=state.rate, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(0.1,12)) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
labs(title="Scatter Plot of State Death Rate against Number of Cases", y="State Death Rate", x="Number of Covid Cases") +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
#scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
labs(title="Scatter Plot of State Death Rate against Number of Cases", y="State Death Rate", x="Number of Covid Cases") +
theme_bw()
stateMerged %>%
filter(!is.na(Election)) %>%
ggplot(aes(x=cases, y=state.rate, size=Population, color=Election)) +
scale_color_manual(values=c("blue", "red")) +
geom_point(alpha=0.3) +
scale_size(range = c(1,10)) +
labs(title="Scatter Plot of State Death Rate against Number of Cases", y="State Death Rate", x="Number of Covid Cases") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
install.packages("palmerpenguins")
library(palmerpenguins)
?penguins
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)")
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
cor(body_mass_g, flipper_length_mm)
cor(penguins$body_mass_g, penguins$flipper_length_mm)
cor(penguins$body_mass_g, penguins$flipper_length_mm)
penguins$body_mass_g
penguins$flipper_length_mm
cor(penguins$body_mass_g, penguins$flipper_length_mm)
library(tidyverse)
cor(penguins$body_mass_g, penguins$flipper_length_mm)
penguins$body_mass_g
penguins$flipper_length_mm
penguins
penguins[flipper_length_mm,]
penguins["flipper_length_mm"",]
penguins["flipper_length_mm",]
penguins[,"flipper_length_mm"]
penguins[,c("flipper_length_mm", "body_mass_g")]
cor(penguins[,c("flipper_length_mm", "body_mass_g")])
cor(penguins[,c("flipper_length_mm", "body_mass_g")], use = "complete.obs")
result<-lm(flipper_length_mm~body_mass_g, data=penguins)
summary(result)
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
cor(penguins[,c("flipper_length_mm", "body_mass_g")], use = "complete.obs")
library(palmerpenguins)
library(palmerpenguins)
library(palmerpenguins)
library(palmerpenguins)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(tidyverse)
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(body_mass_g, flipper_length_mm, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
cor(penguins[,c("flipper_length_mm", "body_mass_g")], use = "complete.obs")
summary(result)
result<-lm(flipper_length_mm~body_mass_g, data=penguins)
summary(result)
result<-lm(body_mass_g~flipper_length_mm, data=penguins)
summary(result)
predict(result, 220)
newData = data.frame(c(220))
predict(result, newData)
colnames(newData) = "flipper_length_mm"
predict(result, newData)
anova(result)
anova.tab = anova(result)
SST<-sum(anova.tab$"Sum Sq")
anova.tab$"Sum Sq"[1]/SST
knitr::opts_chunk$set(echo = TRUE)
library(palmerpenguins)
library(palmerpenguins)
library(tidyverse)
penguins %>%
filter(species == "Gentoo") %>%
ggplot(aes(flipper_length_mm,body_mass_g, color=species)) +
geom_point() +
labs(title="Flipper Length vs Body Mass", x="Body Mass (g)", y="Flipper Length (mm)") +
theme_bw()
result = penguins %>%
filter(species == "Gentoo") %>%
lm(body_mass_g~flipper_length_mm)
data = penguins %>%
filter(species == "Gentoo")
result<-lm(body_mass_g~flipper_length_mm, data=data)
summary(result)
newData = data.frame(c(220))
colnames(newData) = "flipper_length_mm"
predict(result, newData)
knitr::opts_chunk$set(echo = TRUE)
temp <- mammals
library(tidyverse)
library(tidyverse)
library(MASS)
temp <- mammals
temp$brain = temp$brain^0.075
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
temp <- mammals
temp$brain = log(temp$brain)
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
temp <- mammals
temp$brain = temp$brain^0.075
temp %>%
ggplot(aes(body, brain)) + geom_point() + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
install.packages(faraway)
install.packages("faraway")
library(faraway)
library(tidyverse)
data <- cornnit
head(data)
data %>%
ggplot(aes(nitrogen, yield)) + geom_point() + theme_bw()
result <- lm(yield~nitrogen, data=data)
yhat = result$fitted.values
res = result$residuals
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
boxcox(result)
library(MASS)
boxcox(result)
boxcox(result, lambda = seq(1, 3, 1/10))
boxcox(result, lambda = seq(1, 5, 1/10))
boxcox(result, lambda = seq(2, 4, 1/10))
boxcox(result, lambda = seq(2, 3.5, 1/10))
ystar <- data$yield^(0.75)
ystar <- data$yield^(0.75)
result2 <- lm(ystar~data$nitrogen)
yhat = result2$fitted.values
res = result2$residuals
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
temp <- data
temp$yield <- temp$yield^0.75
result2 <- lm(yield~nitrogen, data=temp)
yhat = result2$fitted.values
res = result2$residuals
data %>%
ggplot(aes(yhat, res)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
yhat2 = result2$fitted.values
res2 = result2$residuals
data %>%
ggplot(aes(yhat2, res2)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
data
data
head(temp)
result2 <- lm(yield~nitrogen, temp)
yhat2 = result2$fitted.values
res2 = result2$residuals
data %>%
ggplot(aes(yhat2, res2)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
temp$yield <- temp$yield^2.75
result2 <- lm(yield~nitrogen, temp)
yhat2 = result2$fitted.values
res2 = result2$residuals
data %>%
ggplot(aes(yhat2, res2)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
boxcox(result2, lambda = seq(2, 3.5, 1/10))
boxcox(result2, lambda = seq(-2,2, 1/10))
acf(result2$residuals, main="ACF Plot of Residuals with ystar")
qqnorm(result2$residuals)
result2
qqline(result2, col="red")
qqnorm(result2$residuals)
qqline(result2, col="red")
qqline(result2$residuals, col="red")
qqnorm(result2$residuals)
temp <- data
temp$yield <- temp$yield^2.75
temp %>%
ggplot(aes(yield, nitrogen)) + geom_point() + theme_bw()
temp %>%
ggplot(aes(yield, log(nitrogen))) + geom_point() + theme_bw()
temp %>%
ggplot(aes(yield, log(nitrogen + 0.01))) + geom_point() + theme_bw()
temp %>%
ggplot(aes(yield, log(nitrogen + 1))) + geom_point() + theme_bw()
temp %>%
ggplot(aes(yield, nitrogen)) + geom_point() + theme_bw()
temp <- data
temp$yield <- temp$yield^2.75
temp$nitrogen <- log(temp$nitrogen)
result3 <- lm(yield~nitrogen, temp)
temp <- data
temp$yield <- temp$yield^2.75
temp$nitrogen <- log(temp$nitrogen)
result3 <- lm(yield~nitrogen, temp)
temp <- data
temp$yield <- temp$yield^2.75
temp$nitrogen <- log(temp$nitrogen + 0.0000001)
result3 <- lm(yield~nitrogen, temp)
yhat3 = result3$fitted.values
res3 = result3$residuals
data %>%
ggplot(aes(yhat3, res3)) + geom_point() + theme_bw() + geom_hline(yintercept=0, color="red")
acf(result3$residuals, main="ACF Plot of Residuals with ystar")
qqnorm(result3$residuals)
result3
result3
qqnorm(result3$residuals) + qqline(result3, col="red")
qqnorm(result3$residuals) +
qqline(result3$residuals, col="red")
qqnorm(result3$residuals)
qqline(result3$residuals, col="red")
qqnorm(result3$residuals) + qqline(result3$residuals, col="red")
{
qqnorm(result3$residuals)
qqline(result3$residuals, col="red")
}
e^1
exp(1)
exp(1-0.4493)
exp(-0.4493)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(MASS)
library(ggplot)
library(tidyverse)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module6")
data = read.csv("nfl.txt")
head(data)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module6", sep="\t")
data = read.csv("nfl.txt")
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module6")
data = read.csv("nfl.txt", sep="\t")
head(data)
pairs(data, lower.panel = NULL)
pairs(data)
, lower.panel = NULL
pairs(data, lower.panel = NULL)
cor(data)
pairs(data, lower.panel = NULL)
cor(data)
pairs(data, lower.panel = NULL)
cor(data)
result<-lm(y~x2+x7+x8, data=data)
result
summary(result)
library(dplyr)
library(MASS)
library(tidyverse)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module6")
data = read.csv("nfl.txt", sep="\t")
head(data)
newdata<-data.frame(x2=2000, x7=48, x8=2350)
predict(result, newdata, level=0.95,
interval="confidence")
predict(result, newdata, level=0.95,interval="confidence")
predict(result, newdata, level=0.95,interval="prediction")
?predict
acf(result$residuals, main="ACF Plot of Residuals with ystar")
{
qqnorm(result$residuals)
qqline(result$residuals, col="red")
}
result<-lm(y~x1+x2+x7+x8, data=data)
summary(result)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(MASS)
library(tidyverse)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Project")
data = read.csv("diamonds4.csv")
head(data)
pairs(data, lower.panel = NULL)
head(data)
library(dplyr)
library(MASS)
library(tidyverse)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Project")
data = read.csv("diamonds4.csv")
head(data)
pairs(data, lower.panel = NULL)
pairs(data, lower.panel = NULL)
pairs(data[["carat", "price"]], lower.panel = NULL)
cor(data)
data %>%
ggplot(aes(carat, price, fill="color"))
data %>%
ggplot(aes(carat, price, fill="color")) +geom_point()
data %>%
ggplot(aes(carat, price, fill=color)) +geom_point()
data %>%
ggplot(aes(carat, price, color=color)) +geom_point()
data %>%
ggplot(aes(carat, price, color=color)) +geom_point() + theme_bw()
data %>%
ggplot(aes(carat, price, color=color)) +geom_point() + theme_bw()
data %>%
ggplot(aes(carat, price, color=clarity)) +geom_point() + theme_bw()
data %>%
ggplot(aes(carat, price, color=clarity)) +geom_point() + theme_bw()
data %>%
ggplot(aes(carat, price, color=cut)) +geom_point() + theme_bw()
data %>%
ggplot(aes(carat, price, color=cut)) +geom_point() + theme_bw()
newData = data %>%
group_by(cut) %>%
summarize(Counts=n()) %>%
mutate(prop=Counts/nrow(data))
ggplot(newData, aes(x=cut, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="GPA Category", y="Proportions of Students", title="Dist of GPA Category") +
theme_bw()
ggplot(newData, aes(x=cut, y=prop)) +
geom_bar(stat="identity",fill="blue", color="orange") +
labs(x="Cut Category", y="Proportions of Cuts", title="Dist of Cut") +
theme_bw()
summarize(average
data %>%
data %>%
group_by(cut) %>%
summarize(average)
data %>%
group_by(cut) %>%
summarize()
data %>%
group_by(cut) %>%
summarize(price = mean(price, na.rm = TRUE))
library(dplyr)
library(MASS)
library(tidyverse)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module6")
data = read.csv("nfl.txt", sep="\t")
head(data)
acf(result$residuals, main="ACF Plot of Residuals with ystar")
qqnorm(result$residuals)
qqline(result$residuals, col="red")
{
qqnorm(result$residuals)
qqline(result$residuals, col="red")
}
cor(data)
