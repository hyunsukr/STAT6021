caption = expression(mu)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = element_text(expression(mu))
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4))
)    +
theme(
plot.caption = element_text(hjust = 0)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = element_text(expression(mu))
)    +
theme(
plot.caption = element_text(hjust = 0)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = element_text(expression(mu))
)    +
theme(
plot.caption = element_text(hjust = 4)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = element_text(expression(mu))
)    +
theme(
plot.caption = element_text(hjust = 0.5)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = element_text(expression(mu))
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = expression(mu)
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
title = element_text(round(pnorm(-2,0,1),4)),
caption = expression(paset(mu, "- 2", sigma)
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
title = element_text(round(pnorm(-2,0,1),4)),
caption = expression(paset(mu, "- 2", sigma)
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = expression(paset(mu, "- 2", sigma))
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(round(pnorm(-2,0,1),4)),
caption = expression(paste(mu, "- 2", sigma))
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
pnrom(-2,0,1)
pnrom(-2,0,1)pnrom(-2,0,1)
pnrom(-2,0,1)
pnorm(-2,0,1)
pnorm(-2,0,2)
pnorm(-2,0,1)
pnorm(-2,0,1)/2
pnorm(-2,0,1)
pnorm(-3,0,1)
1 - pnrom(-3,0,1)
1 - pnorm(-3,0,1)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4, -2),
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(paste("Plot 1: ", round(pnorm(-2,0,1),4))),
caption = expression(paste(mu, "- 2", sigma))
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
1 - pnorm(-2,0,1)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = if(1=2) {c(-4, -2)} else {c(-4,0)},
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(paste("Plot 1: ", round(pnorm(-2,0,1),4))),
caption = expression(paste(mu, "- 2", sigma))
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = if(1==2) {c(-4, -2)} else {c(-4,0)},
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
title = element_text(paste("Plot 1: ", round(pnorm(-2,0,1),4))),
caption = expression(paste(mu, "- 2", sigma))
)    +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
1 || 0
"10" == 10
set.seed(23)
set.seed(23);sample(1:4,1)
set.seed(25);sample(1:4,1)
for i in c(1:100) {
set.seed(i);
x = sample(1:4,1)
if (x == 2) {
break
}
}
for i in c(1:100) {
set.seed(i);
x = sample(1:4,1)
if (x == 2) {
break
}
}
for (i in c(1:100)) {
set.seed(i);
x = sample(1:4,1)
if (x == 2) {
break
}
}
for (i in c(1:1000)) {
set.seed(i);
x = sample(1:4,1)
if (x == 2) {
print(i)
break
}
}
for (i in c(1:1000)) {
set.seed(i);
x = sample(1:4,1)
if (x == 2) {
print(i)
break
}
}
for (i in c(6:1000)) {
set.seed(i);
x = sample(1:4,1)
if (x == 2) {
print(i)
break
}
}
pnorm(-0.76,0,1)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm) +
stat_function(fun = dnorm, xlim = c(-4,-1) ,
geom = "area", fill = "#707070", alpha = .2) +
geom_segment(x=0,y=0,xend=0,yend=0.5) +
theme_void() +
labs(
caption = expression(paste(mu, "- 0.76", sigma))
) +
theme(
plot.caption = element_text(hjust = 0.5, size=12)
)
-1.1 * -1 + -0.36
seq(-1.7,-1.1,-0.05)
seq(-1.7,-1.1,0.05)
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
inner_join(qdf, single_response)
library("jsonlite")
library("dplyr")
inner_join(qdf, single_response)
qlist =read_csv("/Users/maxryoo/Desktop/fullquestions.csv")
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
library("jsonlite")
library("dplyr")
qdf = cbind(qlist$id, qlist$type)
colnames(qdf) <- c("id","type")
i = 1
single_response = fromJSON(response$response[i])
single_response
inner_join(qdf, single_response)
qlist =read_csv("/Users/maxryoo/Desktop/fullquestions.csv")
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
qlist = read_csv("/Users/maxryoo/Desktop/fullquestions.csv")
library(tidyverse)
qlist = read_csv("/Users/maxryoo/Desktop/fullquestions.csv")
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
qdf = cbind(qlist$id, qlist$type)
colnames(qdf) <- c("id","type")
i = 1
single_response = fromJSON(response$response[i])
single_response
inner_join(qdf, single_response)
qdf = as.data.frame(cbind(qlist$id, qlist$type))
single_response = as.data.frame(fromJSON(response$response[i]))
single_response
inner_join(qdf, single_response)
colnames(qdf) <- c("id","type")
qdf$id <- as.numeric(qdf$id)
qdf
inner_join(qdf, single_response)
single_response
colnames(qdf) <- c("qId","type")
qdf$id <- as.numeric(qdf$id)
qdf
i = 1
single_response = as.data.frame(fromJSON(response$response[i]))
single_response
inner_join(qdf, single_response)
inner_join(qdf, single_response, by ="qId", "qID")
colnames(qdf) <- c("qId","type")
qdf$id <- as.numeric(qdf$id)
qdf$qId <- as.numeric(qdf$qId)
qdf
inner_join(qdf, single_response, by ="qId", "qID")
qdf
single_response
inner_join(qdf, single_response, by =c("qId"="qID"))
qdf$qId
single_response$qID
qlist = read_csv("/Users/maxryoo/Desktop/fullquestions.csv")
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
library("jsonlite")
library("dplyr")
qdf = as.data.frame(cbind(qlist$id, qlist$type))
colnames(qdf) <- c("qId","type")
i = 1
single_response = as.data.frame(fromJSON(response$response[i]))
single_response
inner_join(qdf, single_response, by =c("qId"="qID"))
single_response$qID
colnames(qdf) <- c("qID","type")
single_response = as.data.frame(fromJSON(response$response[i]))
single_response$qID
inner_join(qdf, single_response, by =c("qId"="qID"))
qlist = read_csv("/Users/maxryoo/Desktop/fullquestions.csv")
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
library("jsonlite")
library("dplyr")
qdf = as.data.frame(cbind(qlist$id, qlist$type))
colnames(qdf) <- c("qID","type")
i = 1
single_response = as.data.frame(fromJSON(response$response[i]))
single_response$qID
inner_join(qdf, single_response, by =c("qId"="qID"))
inner_join(qdf, single_response, by =c("qID"="qID"))
right_join(qdf, single_response, by =c("qID"="qID"))
colnames(qdf) <- c("qID","questionClass")
right_join(qdf, single_response, by =c("qID"="qID"))
tmp<-right_join(qdf, single_response, by =c("qID"="qID"))
tmp$questionClass.y <- NULL
tmp
colnames(tmp)[colnames(tmp) == 'questionClass.x'] <- 'questionClass'
tmp
tmp<-right_join(qdf, single_response, by =c("qID"="qID"))
tmp
tmp$questionClass.x
qdf$qID
which(qdf$qID == '220')
response = read_csv("/Users/maxryoo/Desktop/responsetests.csv")
library("jsonlite")
library("dplyr")
qdf = as.data.frame(cbind(qlist$id, qlist$type))
colnames(qdf) <- c("qID","questionClass")
i = 1
single_response = as.data.frame(fromJSON(response$response[i]))
single_response$qID
tmp<-right_join(qdf, single_response, by =c("qID"="qID"))
tmp$questionClass.x
which(qdf$qID == '220')
tmp$questionClass.y <- NULL
colnames(tmp)[colnames(tmp) == 'questionClass.x'] <- 'questionClass'
tmp
final = toString(tmp)
final
response
response[i]
response[,i]
response[i,]
exam = response[i,]$exam_id
uid = response[i,]$user_id
class = response[i,]$class_id
sql <- paste0("UPDATE usersExams SET response = '", final, "' WHERE exam_id=", exam, " AND user_id='", uid, "' AND class_id='", class,"';")
sql
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module1")
data = read.table("students.txt")
data
data = read.table("students.txt", row.names = TRUE)
data
data = read.table("students.txt", col.names = TRUE)
head(data)
data = read.table("students.txt", header = TRUE)
head(data)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/maxryoo/Documents/MSDS/STAT6021/Module1")
data = read.table("students.txt", header = TRUE)
data$Student <- NULL
head(data)
length(data)
nrow(data)
is.na(data)
data[complete.cases(data),]
nrows(data) - nrows(no_missing)
nrow(data) - nrow(no_missing)
nrow(data) - nrow(no_missing)
no_missing = data[complete.cases(data),]
nrow(data) - nrow(no_missing)
numeric <- unlist(lapply(data, is.numeric))
numeric
numeric_cols <- unlist(lapply(data, is.numeric))
numeric_cols <- unlist(lapply(data, is.numeric))
numeric = data[, numeric_cols]
numeric
apply(numeric,2,median,na.rm=T)
study_mean = mean(data$StudyHrs)
study_mean = mean(data$StudyHrs, na.rm = T)
study_std = std(data$StudyHrs, na.rm = T)
study_std = sd(data$StudyHrs, na.rm = T)
study_mean
prnit(study_mean, study_std)
print(study_mean, study_std)
print(c(study_mean, study_std))
data$Gender == female
data$Gender == "female"
data[data$Gender == "female"]
data[,data$Gender == "female"]
data[data$Gender == "female",]
male = data[data$Gender == "male",]
confidence_interval <- function(data) {
return "hello"
confidence_interval <- function(data) {
return("hello")
}
confidence_interval("hello")
confidence_interval <- function(data) {
mean = mean(data$StudyHrs)
num = nrows(data)
sd = sd(data$StudyHrs)
se = sd / sqrt(num)
alpha = (1 - 0.95)
degree.freedom = num - 1
t.score = qt(p=alpha/2, df=degree.freedom,lower.tail=F)
margin = t.score * se
lower.bound <- mean - margin.error
upper.bound <- mean + margin.error
return(c(lower.bound,upper.bound))
}
confidence_interval(male)
confidence_interval <- function(data) {
mean = mean(data$StudyHrs)
num = nrow(data)
sd = sd(data$StudyHrs)
se = sd / sqrt(num)
alpha = (1 - 0.95)
degree.freedom = num - 1
t.score = qt(p=alpha/2, df=degree.freedom,lower.tail=F)
margin = t.score * se
lower.bound <- mean - margin.error
upper.bound <- mean + margin.error
return(c(lower.bound,upper.bound))
}
confidence_interval(male)
confidence_interval <- function(data) {
mean = mean(data$StudyHrs)
num = nrow(data)
sd = sd(data$StudyHrs)
se = sd / sqrt(num)
alpha = (1 - 0.95)
degree.freedom = num - 1
t.score = qt(p=alpha/2, df=degree.freedom,lower.tail=F)
margin = t.score * se
lower.bound <- mean - margin
upper.bound <- mean + margin
return(c(lower.bound,upper.bound))
}
confidence_interval(male)
male_ci = confidence_interval(male)
female_ci = confidence_interval(female)
female = data[data$Gender == "female",]
female_ci = confidence_interval(female)
print(male_ci)
print(female_ci)
print(c(male_ci, "\n", female_ci))
print(c(male_ci, female_ci))
print(c("Male: ", male_ci, "\\n Female: ",female_ci))
print(c("Male: ", male_ci, "Female: ",female_ci))
print(c(male_ci,female_ci))
median(female$StudyHrs)
median(male$StudyHrs)
median(female$StudyHrs)
median(male$StudyHrs)
median(female$Smoke)
median(male$Smoke)
smoke = data[data$Smoke == "Yes"]
no_smoke = data[data$Smoke == "No"]
data$Smoke
smoke = data[data$Smoke == "Yes",]
no_smoke = data[data$Smoke == "No",]
median(smoke$StudyHrs)
median(no_smoke$StudyHrs)
newData = data
data$PartyAnimal <- ifelse(data$PartyNum>8, "yes", "no")
newData = data
head(newData)
cut(data$GPA, breaks = c(0, 3, 3.5, 5),
labels = c("Low", "moderate", "high"))
data$GPA
cut(data$GPA, breaks = c(0, 3, 3.5, 5),
labels = c("Low", "moderate", "high"))
newData$GPA.cat <- cut(data$GPA, breaks = c(0, 3, 3.5, 5),
labels = c("Low", "moderate", "high"))
head(newData)
newData$GPA.cat <- cut(data$GPA, breaks = c(0, 3, 3.5, 5),
labels = c("Low", "moderate", "high"))
head(newData)
result = read.table("students.txt", header = TRUE)
result$Student <- NULL
result$GPA.cat <- cut(data$GPA, breaks = c(0, 3, 3.5, 5),
labels = c("Low", "moderate", "high"))
result$PartyAnimal <- ifelse(result$PartyNum>8, "yes", "no")
head(result)
write.csv(result, file="new_students.csv", row.names = TRUE)
study_data = read.table("students.txt", header = TRUE)
study_data = study_data[study_data$PartyNum > 8,]
study_data
study_data = read.table("students.txt", header = TRUE)
study_data = study_data[complete.cases(study_data),]
study_data = study_data[study_data$PartyNum > 8,]
study_data
study_data = study_data[study_data$GPA < 3.0,]
study_data
study_data = study_data[study_data$StudyHrs < 15,]
study_data
nrow(study_data)
